########### MODEL JOB SCRIPT CONFIG ###########

# Model file directories/paths
MAXENT=/home/compute/maxent.jar

#TRAINCLIMATE=/home/jc165798/Climate/PCMDI/01.Oz.5km.61.90/mxe/1975
#PROJECTCLIMATE=/home/jc165798/Climate/PCMDI/01.Oz.5km.61.90/mxe

PROJECTCLIMATE=/home/compute/bioclim_mxe
TRAINCLIMATE=$PROJECTCLIMATE/1990

# Filter Projection Climates folder by.. (uses the find -regex option)
# NOTE: Regex applied against the full file path.
#
# Use ".*" to capture everything (i.e. don't filter)
FILTER_FULL_PROJECTION_PATH_BY_EMACS_REGEX="\(\(.*/RCP[^/]*\)\|\(.*/1990[^/]*\)\)"

# How many procs to run in background (at most)
MAX_NUM_JOBS=2

# Where to copy zip outputs to
# Will be created if it doesn't exist
TDH_DIR=/home/compute/TDH/

PYTHON_BIN=/home/compute/Edgar/env/bin/python

SWIFT_PUBLIC_COLLECTION="tdh_public"

# NECTAR OS (open stack) config
# ==============================

export NECTAR_USERNAME=""; echo "YOU NEED TO SET THE USERNAME"; exit 1001;
export NECTAR_API_KEY=""; echo "YOU NEED TO SET THE NECTAR API KEY"; exit 1002;

# With the addition of Keystone, to use an openstack cloud you should
# authenticate against keystone, which returns a **Token** and **Service
# Catalog**.  The catalog contains the endpoint for all services the
# user/tenant has access to - including nova, glance, keystone, swift.
#
# *NOTE*: Using the 2.0 *auth api* does not mean that compute api is 2.0.  We
# will use the 1.1 *compute api*
export OS_AUTH_URL=https://keystone.rc.nectar.org.au:5000/v2.0/

# With the addition of Keystone we have standardized on the term **tenant**
# as the entity that owns the resources.
export OS_TENANT_ID=""; echo "YOU NEED TO SET THE OPEN STACK TENANT ID"; exit 1003;
export OS_TENANT_NAME=""; echo "YOU NEED TO SET THE OPEN STACK TENANT NAME"; exit 1004;

# In addition to the owning entity (tenant), openstack stores the entity
# performing the action as the **user**.
export OS_USERNAME="$NECTAR_USERNAME"

# With Keystone you pass the keystone password.
export OS_PASSWORD="$NECTAR_API_KEY"

